{
	"info": {
		"_postman_id": "c7ec9183-dbdb-4ff0-b6e4-6d9fd43a6628",
		"name": "New Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43759934",
		"_collection_link": "https://abhigyanmohanty.postman.co/workspace/Abhigyan-Mohanty's-Workspace~0fbd6756-f372-4e14-86fb-35e3535f4be3/collection/43759934-c7ec9183-dbdb-4ff0-b6e4-6d9fd43a6628?action=share&source=collection_link&creator=43759934"
	},
	"item": [
		{
			"name": "http://localhost:8080/tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields - id, title, and completed\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    responseData.forEach(function(item) {\r",
							"        pm.expect(item).to.be.an('object');\r",
							"        pm.expect(item).to.have.property('id');\r",
							"        pm.expect(item).to.have.property('title');\r",
							"        pm.expect(item).to.have.property('completed');\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Id is a non-empty string and completed is a boolean\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
							"    \r",
							"    responseData.forEach(function(task) {\r",
							"        pm.expect(task.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should be a non-empty string\");\r",
							"        pm.expect(task.completed).to.be.a('boolean', \"Completed should be a boolean\");\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tasks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields - id, title, and completed\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    responseData.forEach(function(item) {\r",
							"        pm.expect(item).to.be.an('object');\r",
							"        pm.expect(item).to.have.property('id');\r",
							"        pm.expect(item).to.have.property('title');\r",
							"        pm.expect(item).to.have.property('completed');\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Id is a non-empty string and completed is a boolean\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
							"    \r",
							"    responseData.forEach(function(task) {\r",
							"        pm.expect(task.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should be a non-empty string\");\r",
							"        pm.expect(task.completed).to.be.a('boolean', \"Completed should be a boolean\");\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\":\"learn Golang\",\r\n    \"completed\":true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tasks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/tasks/d71f664c-137f-11f0-9010-68f728ae9827",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\":\"Cook dinner\",\r\n    \"completed\":false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tasks/d71f664c-137f-11f0-9010-68f728ae9827",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks",
						"d71f664c-137f-11f0-9010-68f728ae9827"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/tasks/d71f664c-137f-11f0-9010-68f728ae9827",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\":\"Cook dinner\",\r\n    \"completed\":false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tasks/completed",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks",
						"completed"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/tasks/d71f664c-137f-11f0-9010-68f728ae9827",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\":\"Cook dinner\",\r\n    \"completed\":false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tasks/pending",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks",
						"pending"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/tasks/d71f664c-137f-11f0-9010-68f728ae9827",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\":\"Cook dinner\",\r\n    \"completed\":false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tasks/d7197255-137f-11f0-900d-68f728ae9827",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks",
						"d7197255-137f-11f0-900d-68f728ae9827"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/tasks/d71f664c-137f-11f0-9010-68f728ae9827",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\":\"Read comics\",\r\n    \"completed\":true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tasks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks"
					]
				}
			},
			"response": []
		}
	]
}